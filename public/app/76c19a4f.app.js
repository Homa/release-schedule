"use strict";angular.module("releaseScheduleApp",["ngCookies","ngResource","ngSanitize","ngRoute"]).config(["$routeProvider","$locationProvider","$httpProvider",function(a,b,c){a.otherwise({redirectTo:"/"}),b.html5Mode(!0),c.interceptors.push("authInterceptor")}]).factory("authInterceptor",["$rootScope","$q","$cookieStore","$location",function(a,b,c,d){return{request:function(a){return a.headers=a.headers||{},c.get("token")&&(a.headers.Authorization="Bearer "+c.get("token")),a},responseError:function(a){return 401===a.status?(d.path("/login"),c.remove("token"),b.reject(a)):b.reject(a)}}}]).run(["$rootScope","$location","Auth",function(a,b,c){a.$on("$routeChangeStart",function(a,d){c.isLoggedInAsync(function(a){d.authenticate&&!a&&b.path("/login")})})}]),angular.module("releaseScheduleApp").config(["$routeProvider",function(a){a.when("/login",{templateUrl:"app/account/login/login.html",controller:"LoginCtrl"}).when("/signup",{templateUrl:"app/account/signup/signup.html",controller:"SignupCtrl"}).when("/settings",{templateUrl:"app/account/settings/settings.html",controller:"SettingsCtrl",authenticate:!0})}]),angular.module("releaseScheduleApp").controller("LoginCtrl",["$scope","Auth","$location",function(a,b,c){a.user={},a.errors={},a.login=function(d){a.submitted=!0,d.$valid&&b.login({email:a.user.email,password:a.user.password}).then(function(){c.path("/")}).catch(function(b){a.errors.other=b.message})}}]),angular.module("releaseScheduleApp").controller("SettingsCtrl",["$scope","User","Auth",function(a,b,c){a.errors={},a.changePassword=function(b){a.submitted=!0,b.$valid&&c.changePassword(a.user.oldPassword,a.user.newPassword).then(function(){a.message="Password successfully changed."}).catch(function(){b.password.$setValidity("mongoose",!1),a.errors.other="Incorrect password",a.message=""})}}]),angular.module("releaseScheduleApp").controller("SignupCtrl",["$scope","Auth","$location",function(a,b,c){a.user={},a.errors={},a.register=function(d){a.submitted=!0,d.$valid&&b.createUser({name:a.user.name,email:a.user.email,password:a.user.password}).then(function(){c.path("/")}).catch(function(b){b=b.data,a.errors={},angular.forEach(b.errors,function(b,c){d[c].$setValidity("mongoose",!1),a.errors[c]=b.message})})}}]),angular.module("releaseScheduleApp").controller("AdminCtrl",["$scope","$http","Auth","User",function(a,b,c,d){a.users=d.query(),a.delete=function(b){d.remove({id:b._id}),angular.forEach(a.users,function(c,d){c===b&&a.users.splice(d,1)})}}]),angular.module("releaseScheduleApp").config(["$routeProvider",function(a){a.when("/admin",{templateUrl:"app/admin/admin.html",controller:"AdminCtrl"})}]),angular.module("releaseScheduleApp").controller("MainCtrl",["$scope","Tasks",function(a,b){a.workstreams=b.activeWorkstreams,a.tasksInRange=b.tasksInRange,a.addedWorkstreams=[],a.predicate="order",a.all=!0,a.showAll=function(){a.all=!0,a.addedWorkstreams=[],angular.forEach(a.workstreams,function(a){a.selected=!1})},a.filterTaskResult=function(b){var c=a.addedWorkstreams.indexOf(b);-1===c?(a.all=!1,a.addedWorkstreams.push(b)):a.addedWorkstreams.splice(c,1)}}]),angular.module("releaseScheduleApp").directive("tasksList",["DateRange","Measure",function(a,b){{var c=b.getColumnWidth,d=a.getStartDate;a.getEndDate}return{restrict:"E",scope:{task:"=info"},template:'<div class="task-container"><div class="task-track"><div class="task-title-wrapper noselect">{{task.title}}</div><div class="end-dev-to-release-line"></div><div class="start-dev-point"></div><div class="end-dev-point"></div><div class="release-point"></div></div><div class="hint hidden bottom"><div class="hint-arrow"></div><div class="hint-inner ng-binding"><h5>{{task.title}}</h5><b>Start:</b> {{task.startDate}}<br><b>Finish:</b> {{task.endDevDate | date:\'medium\'}}<br><b>Release:</b> {{task.releaseDate}}<br>desc: {{task.desc}}</div></div></div>',link:function(a,b){var e=b.find(".start-dev-point"),f=b.find(".end-dev-point"),g=b.find(".release-point"),h=b.find(".task-title-wrapper"),i=b.find(".end-dev-to-release-line"),j=moment(a.task.startDate).diff(d,"days")*c,k=moment(a.task.endDevDate).diff(d,"days")*c,l=moment(a.task.releaseDate).diff(d,"days")*c,m=a.task.color,n=parseInt(moment(a.task.endDevDate).diff(a.task.startDate,"days"))*c,o=parseInt(moment(a.task.releaseDate).diff(a.task.endDevDate,"days"))*c,p=function(a,b){h.css({left:b+"px","background-color":m,width:a+"px"})};p(n,j);var q=function(a,b){i.css({left:b+"px","background-color":m,width:a+"px"})};q(o,k);var r=function(a){e.css({"border-color":m,left:a+"px"})};r(j);var s=function(a){f.css({"border-color":m,left:a+"px"})};s(k);var t=function(a){g.css({"border-color":m,"background-color":m,left:a+"px"})};t(l),e.bind("mouseenter",function(){b.find(".hint").removeClass("hidden"),b.find(".hint").css({left:j+"px",top:"40px"})}),b.bind("mouseleave",function(){b.find(".hint").addClass("hidden")})}}}]),angular.module("releaseScheduleApp").directive("timelineHeader",["Measure",function(a){var b=a.getColumnWidth,c=a.noDays;return{restrict:"A",template:'<div class="month"></div>',link:function(d,e){for(var f="",g=-c/2,h=c+c/2;h>g;g++)a.firstDayOfMonthArray[g]&&(f=f+'<div style="width: '+b+"px;left: "+b*g+'px;border-color: #000;">'+moment(a.firstDayOfMonthArray[g]).format("MMM YYYY")+"</div>");e.find(".month").html(f)}}}]),angular.module("releaseScheduleApp").directive("timelineGrid",["Measure",function(a){var b=a.getColumnWidth,c=a.noDays;return{restrict:"A",link:function(d,e){for(var f="",g=-c/2,h=c+c/2;h>g;g++)f=a.firstDayOfWeekArray[g]?f+'<div style="width: '+b+"px;left: "+b*g+'px;border-color: #c00;"><!--'+a.firstDayOfWeekArray[g].format("MMM YY dddd")+" --></div>":f+'<div style="width: '+b+"px;left: "+b*g+'px;"></div>';e.html(f)}}}]),angular.module("releaseScheduleApp").filter("selectedTags",function(){return function(a,b){return a.filter(function(a){return 0===b.length?!0:-1!==b.indexOf(a.workstream)?!0:!1})}}),angular.module("releaseScheduleApp").factory("DateRange",function(){return{getStartDate:moment().subtract(380,"day"),getEndDate:moment().add(30,"day"),getNow:moment().subtract(30,"day")}}),angular.module("releaseScheduleApp").factory("Tasks",["DateRange",function(a){for(var b=[{name:"Drupal",color:"#00a8e1",active:!0,tasks:[{title:"task5",startDate:"2014-10-21",endDevDate:"2014-12-27",releaseDate:"2015-03-11",desc:"",order:7},{title:"task7",startDate:"2014-01-01",endDevDate:"2014-02-21",releaseDate:"2014-03-07",desc:"",order:5},{title:"task1",startDate:"2013-10-01",endDevDate:"2014-01-01",releaseDate:"2014-03-11",desc:"",order:1},{title:"task1 very long task1 very long task1 very long task1 ",startDate:"2014-01-07",endDevDate:"2014-02-10",releaseDate:"2014-03-11",desc:"",order:6},{title:"task3",startDate:"2014-01-22",endDevDate:"2014-02-10",releaseDate:"2014-03-11",desc:"",order:9,workstream:1}]},{name:"XYZ",color:"#ec7a08",active:!0,tasks:[{title:"task6",startDate:"2014-01-19",endDevDate:"2014-02-20",releaseDate:"2014-03-12",desc:"",order:10},{title:"task8",startDate:"2014-01-09",endDevDate:"2014-02-10",releaseDate:"2014-03-11",desc:"",order:4},{title:"task22",startDate:"2014-04-01",endDevDate:"2014-06-10",releaseDate:"2015-11-15",desc:"wedewdwedwdwd ewd ewd ew d ewd ewd ewdew d wed ewdew descde    de ewd ewdew d ewd ew de ewdew  wd descdew",order:2}]},{name:"Work Stream 1",color:"#3f9c35",active:!0,tasks:[{title:"task2",startDate:"2014-04-25",endDevDate:"2014-06-10",releaseDate:"2014-12-11",desc:"wedewdwedwdwd ewd ewd ew d ewd ewd ewdew d wed ewdew descde    de ewd ewdew d ewd ew de ewdew  wd descdew",order:3},{title:"task4",startDate:"2014-08-22",endDevDate:"2014-10-10",releaseDate:"2014-11-10",desc:"",order:8}]}],c=[],d=[],e=a.getStartDate,f=a.getEndDate,g=0,h=b.length;h>g;g++){var i=b[g].tasks.length;if(b[g].active===!0){var j={};j.name=b[g].name,j.color=b[g].color,d.push(j);for(var k=0;i>k;k++){var l=b[g].tasks[k];l.color=b[g].color,l.workstream=b[g].name,moment(l.startDate).isAfter(e)&&moment(l.startDate).isBefore(f)?c.push(l):moment(l.releaseDate).isAfter(e)&&moment(l.releaseDate).isBefore(f)?c.push(l):moment(l.releaseDate).isBefore(e)&&moment(l.releaseDate).isAfter(f)&&c.push(l)}}}return{tasksInRange:c,activeWorkstreams:d}}]),angular.module("releaseScheduleApp").factory("Measure",["$window","DateRange",function(a,b){moment().startOf("isoWeek");for(var c=moment(b.getEndDate).diff(b.getStartDate,"days"),d=a.innerWidth/c,e=moment(b.getStartDate),f=[],g=[],h=0;c>h;h++)f.push(1===e.day()?e:0),g.push(1===e.get("date")?e:0),e=moment(e).add(1,"day");return{getColumnWidth:d,noDays:c,firstDayOfWeekArray:f,firstDayOfMonthArray:g}}]),angular.module("releaseScheduleApp").config(["$routeProvider",function(a){a.when("/",{templateUrl:"app/main/main.html",controller:"MainCtrl"})}]),angular.module("releaseScheduleApp").factory("Auth",["$location","$rootScope","$http","User","$cookieStore","$q",function(a,b,c,d,e,f){var g={};return e.get("token")&&(g=d.get()),{login:function(a,b){var h=b||angular.noop,i=f.defer();return c.post("/auth/local",{email:a.email,password:a.password}).success(function(a){return e.put("token",a.token),g=d.get(),i.resolve(a),h()}).error(function(a){return this.logout(),i.reject(a),h(a)}.bind(this)),i.promise},logout:function(){e.remove("token"),g={}},createUser:function(a,b){var c=b||angular.noop;return d.save(a,function(b){return e.put("token",b.token),g=d.get(),c(a)},function(a){return this.logout(),c(a)}.bind(this)).$promise},changePassword:function(a,b,c){var e=c||angular.noop;return d.changePassword({id:g._id},{oldPassword:a,newPassword:b},function(a){return e(a)},function(a){return e(a)}).$promise},getCurrentUser:function(){return g},isLoggedIn:function(){return g.hasOwnProperty("role")},isLoggedInAsync:function(a){g.hasOwnProperty("$promise")?g.$promise.then(function(){a(!0)}).catch(function(){a(!1)}):a(g.hasOwnProperty("role")?!0:!1)},isAdmin:function(){return"admin"===g.role},getToken:function(){return e.get("token")}}}]),angular.module("releaseScheduleApp").factory("User",["$resource",function(a){return a("/api/users/:id/:controller",{id:"@_id"},{changePassword:{method:"PUT",params:{controller:"password"}},get:{method:"GET",params:{id:"me"}}})}]),angular.module("releaseScheduleApp").directive("mongooseError",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.on("keydown",function(){return d.$setValidity("mongoose",!0)})}}}),angular.module("releaseScheduleApp").controller("NavbarCtrl",["$scope","$location","Auth",function(a,b,c){a.menu=[{title:"Home",link:"/"}],a.isCollapsed=!0,a.isLoggedIn=c.isLoggedIn,a.isAdmin=c.isAdmin,a.getCurrentUser=c.getCurrentUser,a.logout=function(){c.logout(),b.path("/login")},a.isActive=function(a){return a===b.path()}}]),angular.module("releaseScheduleApp").run(["$templateCache",function(a){a.put("app/account/login/login.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-12><h1>Login</h1><p>Accounts are reset on server restart from <code>server/config/seed.js</code>. Default account is <code>test@test.com</code> / <code>test</code></p><p>Admin account is <code>admin@admin.com</code> / <code>admin</code></p></div><div class=col-sm-12><form class=form name=form ng-submit=login(form) novalidate><div class=form-group><label>Email</label><input type=email name=email class=form-control ng-model=user.email required></div><div class=form-group><label>Password</label><input type=password name=password class=form-control ng-model=user.password required></div><div class="form-group has-error"><p class=help-block ng-show="form.email.$error.required && form.password.$error.required && submitted">Please enter your email and password.</p><p class=help-block ng-show="form.email.$error.email && submitted">Please enter a valid email.</p><p class=help-block>{{ errors.other }}</p></div><div><button class="btn btn-inverse btn-lg btn-login" type=submit>Login</button> <a class="btn btn-default btn-lg btn-register" href=/signup>Register</a></div></form></div></div><hr></div>'),a.put("app/account/settings/settings.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-12><h1>Change Password</h1></div><div class=col-sm-12><form class=form name=form ng-submit=changePassword(form) novalidate><div class=form-group><label>Current Password</label><input type=password name=password class=form-control ng-model=user.oldPassword mongoose-error><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.other }}</p></div><div class=form-group><label>New Password</label><input type=password name=newPassword class=form-control ng-model=user.newPassword ng-minlength=3 required><p class=help-block ng-show="(form.newPassword.$error.minlength || form.newPassword.$error.required) && (form.newPassword.$dirty || submitted)">Password must be at least 3 characters.</p></div><p class=help-block>{{ message }}</p><button class="btn btn-lg btn-primary" type=submit>Save changes</button></form></div></div></div>'),a.put("app/account/signup/signup.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-12><h1>Sign up</h1></div><div class=col-sm-12><form class=form name=form ng-submit=register(form) novalidate><div class=form-group ng-class="{ \'has-success\': form.name.$valid && submitted,\n                                            \'has-error\': form.name.$invalid && submitted }"><label>Name</label><input name=name class=form-control ng-model=user.name required><p class=help-block ng-show="form.name.$error.required && submitted">A name is required</p></div><div class=form-group ng-class="{ \'has-success\': form.email.$valid && submitted,\n                                            \'has-error\': form.email.$invalid && submitted }"><label>Email</label><input type=email name=email class=form-control ng-model=user.email required mongoose-error><p class=help-block ng-show="form.email.$error.email && submitted">Doesn\'t look like a valid email.</p><p class=help-block ng-show="form.email.$error.required && submitted">What\'s your email address?</p><p class=help-block ng-show=form.email.$error.mongoose>{{ errors.email }}</p></div><div class=form-group ng-class="{ \'has-success\': form.password.$valid && submitted,\n                                            \'has-error\': form.password.$invalid && submitted }"><label>Password</label><input type=password name=password class=form-control ng-model=user.password ng-minlength=3 required mongoose-error><p class=help-block ng-show="(form.password.$error.minlength || form.password.$error.required) && submitted">Password must be at least 3 characters.</p><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.password }}</p></div><div><button class="btn btn-inverse btn-lg btn-login" type=submit>Sign up</button> <a class="btn btn-default btn-lg btn-register" href=/login>Login</a></div></form></div></div><hr></div>'),a.put("app/admin/admin.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><p>The delete user and user index api routes are restricted to users with the \'admin\' role.</p><ul class=list-group><li class=list-group-item ng-repeat="user in users"><strong>{{user.name}}</strong><br><span class=text-muted>{{user.email}}</span> <a ng-click=delete(user) class=trash><span class="glyphicon glyphicon-trash pull-right"></span></a></li></ul></div>'),a.put("app/main/main.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container-fluid><div class=row><div><div><div class=workstream-button><label><input class=all type=checkbox ng-modle=all ng-checked=all ng-click=showAll()> <span class=noselect>All</span></label></div><div class=workstream-button ng-repeat="workstream in workstreams"><label><input type=checkbox ng-model=workstream.selected value={{workstream.name}} ng-click="filterTaskResult(workstream.name, selected, all)"> <span class=noselect ng-style="workstream.selected === true  && { \'background-color\': workstream.color }">{{workstream.name}}</span></label></div></div></div></div><div class=row><div timeline-header class=header-wrapper></div><div class=tasks-wrapper><div timeline-grid class=grid></div><div ng-repeat="task in tasksInRange | orderBy:predicate | selectedTags: addedWorkstreams"><tasks-list info=task></tasks-list></div></div></div></div>'),a.put("components/navbar/navbar.html",'<div class="navbar navbar-default navbar-static-top" ng-controller=NavbarCtrl><div class=container><div class=navbar-header><button class=navbar-toggle type=button ng-click="isCollapsed = !isCollapsed"><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a href="/" class=navbar-brand>release-schedule</a></div><div collapse=isCollapsed class="navbar-collapse collapse" id=navbar-main><ul class="nav navbar-nav"><li ng-repeat="item in menu" ng-class="{active: isActive(item.link)}"><a ng-href={{item.link}}>{{item.title}}</a></li><li ng-show=isAdmin() ng-class="{active: isActive(\'/admin\')}"><a href=/admin>Admin</a></li></ul><ul class="nav navbar-nav navbar-right"><li ng-hide=isLoggedIn() ng-class="{active: isActive(\'/signup\')}"><a href=/signup>Sign up</a></li><li ng-hide=isLoggedIn() ng-class="{active: isActive(\'/login\')}"><a href=/login>Login</a></li><li ng-show=isLoggedIn()><p class=navbar-text>Hello {{ getCurrentUser().name }}</p></li><li ng-show=isLoggedIn() ng-class="{active: isActive(\'/settings\')}"><a href=/settings><span class="glyphicon glyphicon-cog"></span></a></li><li ng-show=isLoggedIn() ng-class="{active: isActive(\'/logout\')}"><a href="" ng-click=logout()>Logout</a></li></ul></div></div></div>')}]);